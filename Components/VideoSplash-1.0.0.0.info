{"Name":"VideoSplash","Id":2341,"Alias":"VideoSplash","Description":"\n\n`VideoViewController` is a `UIViewController` with a background which is\nvideo.\n\n##  Using VideoViewController\n\nThe easiest way to make use of `VideoViewController` is by simply \nspecifying a URL to a video:\n\n    public class ViewController : VideoViewController\n    {\n        public override void ViewDidLoad()\n        {\n            base.ViewDidLoad();\n        \n            var bundle = NSBundle.MainBundle;\n            var resource = bundle.PathForResource(\"splash\", \"mp4\");\n            \n            // set the video\n            VideoUrl = new NSUrl(resource, false);\n            \n            // optionally crop the video\n            StartTime = 12.0f;\n            Duration = 4.0f;\n            \n            // make the video translucent\n            Alpha = 0.7f;\n        }\n    }\n\n## Properties\n\nThere are several properties that can be set to control how the video \nis rendered:\n\n * **VideoUrl**  \n   Specifies the URL to the video file\n * **StartTime**  \n   Specifies the start offest (in seconds) for the video clip\n * **Duration**  \n   Specifies the length (in seconds) of the video clip\n * **BackgroundColor**  \n   Specifies the background color behind the video\n * **Sound**  \n   Specifies whether the sound is enabled or not\n * **Alpha**  \n   Specifies the transparency of the video \n * **Repeat**  \n   Specifies whether to loop the video\n * **FillMode**  \n   Specifies how the video will be displayed\n\n## Methods\n\nIn addition to properties, there are several methods that can be used\nto manage the video playback:\n\n * **PlayVideo()**  \n   Starts/resumes video playback\n * **PauseVideo()**  \n   Stops/pauses video playback\n\nThere are also several methods that will be invoked during playback, \nand can be overridden:\n\n * **OnVideoReady()**  \n   Invoked when the video is loaded and about to start\n * **OnVideoComplete()**  \n   Invoked when the video is finished playijng and about to loop\n","Version":"1.0.0.0","Summary":"VideoSplash is a video-based UIViewController.","QuickStart":"\n`VideoViewController` is a `UIViewController` with a background which is\nvideo.\n\n##  Using VideoViewController\n\nThe easiest way to make use of `VideoViewController` is by simply \nspecifying a URL to a video:\n\n    public class ViewController : VideoViewController\n    {\n        public override void ViewDidLoad()\n        {\n            base.ViewDidLoad();\n        \n            var bundle = NSBundle.MainBundle;\n            var resource = bundle.PathForResource(\"splash\", \"mp4\");\n            \n            // set the video\n            VideoUrl = new NSUrl(resource, false);\n            \n            // optionally crop the video\n            StartTime = 12.0f;\n            Duration = 4.0f;\n            \n            // make the video translucent\n            Alpha = 0.7f;\n        }\n    }\n\n## Properties\n\nThere are several properties that can be set to control how the video \nis rendered:\n\n * **VideoUrl**  \n   Specifies the URL to the video file\n * **StartTime**  \n   Specifies the start offest (in seconds) for the video clip\n * **Duration**  \n   Specifies the length (in seconds) of the video clip\n * **BackgroundColor**  \n   Specifies the background color behind the video\n * **Sound**  \n   Specifies whether the sound is enabled or not\n * **Alpha**  \n   Specifies the transparency of the video \n * **Repeat**  \n   Specifies whether to loop the video\n * **FillMode**  \n   Specifies how the video will be displayed\n\n## Methods\n\nIn addition to properties, there are several methods that can be used\nto manage the video playback:\n\n * **PlayVideo()**  \n   Starts/resumes video playback\n * **PauseVideo()**  \n   Stops/pauses video playback\n\nThere are also several methods that will be invoked during playback, \nand can be overridden:\n\n * **OnVideoReady()**  \n   Invoked when the video is loaded and about to start\n * **OnVideoComplete()**  \n   Invoked when the video is finished playijng and about to loop\n","Hash":"a53d5d6e17636ecfe2b0b3daca624c0f","TargetPlatforms":["ios","ios-unified"],"TrialHash":null}